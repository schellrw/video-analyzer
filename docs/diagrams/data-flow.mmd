sequenceDiagram
    participant Attorney as Attorney
    participant Frontend as React Frontend
    participant API as Flask API
    participant Auth as Supabase Auth
    participant DB as PostgreSQL
    participant Storage as DO Spaces
    participant Queue as Redis Queue
    participant Worker as Celery Worker
    participant AI as AI Models

    %% Authentication Flow
    Attorney->>Frontend: Login
    Frontend->>Auth: Authenticate
    Auth-->>Frontend: JWT Token
    Frontend-->>Attorney: Dashboard

    %% Case Creation
    Attorney->>Frontend: Create New Case
    Frontend->>API: POST /api/cases
    API->>Auth: Validate JWT
    Auth-->>API: User ID
    API->>DB: Insert Case
    DB-->>API: Case ID
    API-->>Frontend: Case Created
    Frontend-->>Attorney: Case Dashboard

    %% Video Upload Flow
    Attorney->>Frontend: Upload Video
    Frontend->>API: Request Upload URL
    API->>Storage: Generate Presigned URL
    Storage-->>API: Upload URL
    API-->>Frontend: Presigned URL
    Frontend->>Storage: Upload Video File
    Storage-->>Frontend: Upload Complete
    Frontend->>API: Confirm Upload
    API->>DB: Update Video Record
    
    %% AI Analysis Initiation
    API->>Queue: Queue Analysis Task
    Queue-->>API: Task ID
    API-->>Frontend: Analysis Started
    Frontend-->>Attorney: Processing Notification

    %% AI Processing
    Worker->>Queue: Fetch Task
    Queue-->>Worker: Video Analysis Task
    Worker->>Storage: Download Video
    Storage-->>Worker: Video File
    
    %% Parallel AI Processing
    par Video Analysis
        Worker->>AI: Visual Analysis (LLaVA)
        AI-->>Worker: Visual Results
    and Audio Transcription
        Worker->>AI: Audio Transcription (Whisper)
        AI-->>Worker: Transcript
    and Violation Detection
        Worker->>AI: NLP Analysis
        AI-->>Worker: Violation Detection
    end
    
    %% Store Results
    Worker->>DB: Store Analysis Results
    DB-->>Worker: Confirmation
    Worker->>Queue: Task Complete
    
    %% Notification
    Worker->>API: Send Webhook
    API->>Frontend: Real-time Update
    Frontend-->>Attorney: Analysis Complete

    %% Review Results
    Attorney->>Frontend: View Analysis
    Frontend->>API: GET /api/analysis/{id}
    API->>DB: Fetch Results
    DB-->>API: Analysis Data
    API-->>Frontend: Analysis Results
    Frontend-->>Attorney: Display Results

    %% Human Review
    Attorney->>Frontend: Review & Correct
    Frontend->>API: POST /api/analysis/review
    API->>DB: Update with Corrections
    DB-->>API: Confirmation
    API-->>Frontend: Review Saved

    %% Report Generation
    Attorney->>Frontend: Generate Report
    Frontend->>API: POST /api/reports
    API->>Queue: Queue Report Task
    Worker->>Queue: Fetch Report Task
    Worker->>DB: Gather Case Data
    Worker->>AI: Generate Legal Report
    AI-->>Worker: Report Content
    Worker->>Storage: Save Report PDF
    Worker->>DB: Update Report Status
    API->>Frontend: Report Ready
    Frontend-->>Attorney: Download Link 